<Application x:Class="MetalMemory.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MetalMemory"
             StartupUri="MetalMemory.xaml">
    <Application.Resources>
        <!-- ImageBrush resources voor de backgrounds - ook te gebruiken vanuit code met FindResource -->
        <ImageBrush x:Key="BordL" ImageSource="/Images/Backgrounds/BordL.png"/>
        <ImageBrush x:Key="MenuL" ImageSource="/Images/Backgrounds/MenuL.png"/>
        <ImageBrush x:Key="MenuR" ImageSource="/Images/Backgrounds/MenuR.png"/>
        <ImageBrush x:Key="SpelL" ImageSource="/Images/Backgrounds/SpelL.png"/>
        <ImageBrush x:Key="SpelR" ImageSource="/Images/Backgrounds/SpelR.png"/>

        <!-- ControlTemplate voor de GameInterface player status paneelen -->
        <ControlTemplate x:Key="playerBordTemplate">
            <Grid>
                <Grid.Background>
                    <ImageBrush ImageSource="Images/GameInterface/playerBackground.png"/>
                </Grid.Background>
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="4*"/>
                    </Grid.ColumnDefinitions>
                    <Viewbox Margin="10,10,0,-10">
                        <Image Source="Images/Overlays/PlayerPointer.png" Uid="playerIcon" Name="playerIcon" RenderTransformOrigin="0.5,0.5" Visibility="Hidden">
                            <Image.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Image.RenderTransform>
                        </Image>
                    </Viewbox>
                    <Viewbox Margin="10,10,10,-10" Grid.Column="1">
                        <TextBox IsHitTestVisible="False" BorderBrush="Transparent" Background="Transparent"
                                 Text="{Binding Path=naam}" Foreground="Goldenrod" FontSize="100"
                                 VerticalContentAlignment="Center" FontFamily="Courier New" Height="162" Width="652"/>
                    </Viewbox>
                </Grid>
                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <!--
                    <Border BorderBrush="black" BorderThickness="1"  Margin="30,10" Grid.Row="1" Grid.ColumnSpan="3"/>
                    <Border BorderBrush="black" BorderThickness="1"  Margin="0,10" Grid.Row="1" Grid.Column="1" />
                    -->
                    <Viewbox HorizontalAlignment="Right" Grid.Column="0" Margin="20,5,5,5">
                        <TextBox IsHitTestVisible="False" BorderBrush="Transparent" Background="Transparent"
                                 Text="" Foreground="Silver" FontSize="80"
                                 VerticalContentAlignment="Center" FontFamily="Courier New" Height="108" Width="240"/>
                    </Viewbox>
                    <Viewbox HorizontalAlignment="Right" Grid.Column="1" Margin="10,5,10,5">
                        <TextBox IsHitTestVisible="False" BorderBrush="Transparent" Background="Transparent"
                                 Text="{Binding Path=popupScore}" Foreground="Silver" FontSize="80"
                                 HorizontalContentAlignment="Right" VerticalContentAlignment="Center" FontFamily="Courier New" Height="108" Width="240"/>
                    </Viewbox>
                    <Viewbox HorizontalAlignment="Right" Grid.Column="2" Margin="5,5,20,5">
                        <TextBox IsHitTestVisible="False" BorderBrush="Transparent" Background="Transparent"
                                 Text="{Binding Path=score}" Foreground="Silver" FontSize="80"
                                 HorizontalContentAlignment="Right" VerticalContentAlignment="Center" FontFamily="Courier New" Height="108" Width="240"/>
                    </Viewbox>
                </Grid>
            </Grid>
        </ControlTemplate>

        
        
        <!--360 Clock wise Rotate effect-->
        <Storyboard x:Key="RotateClockWise" Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)">
            <DoubleAnimation From="0" To="360" BeginTime="0:0:0" Duration="0:0:6" RepeatBehavior="Forever"/>
        </Storyboard>

        <!--360 Counter Clock wise Rotate effect-->
        <Storyboard x:Key="RotateCounterClockWise" Storyboard.TargetProperty="RenderTransform.(RotateTransform.Angle)">
            <DoubleAnimation From="0" To="-360" BeginTime="0:0:0" Duration="0:0:10" RepeatBehavior="Forever"/>
        </Storyboard>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="LightPink"/>
        </Style>

        <!--Transparent buttons-->
        <Style x:Key="TransperentButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Cursor" Value="Hand"/>

            <!--Overide default hover color-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--MetalMemory buttons -->
        <Style x:Key="MMButton" TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="48" />
            <Setter Property="FontFamily" Value="Courier New" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Timeline1">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="Timeline2">
                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="glow" Storyboard.TargetProperty="(UIElement.Opacity)">
                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </ControlTemplate.Resources>
                        <Border BorderBrush="#AAAAAAAA" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                            <Border Background="#7F000000" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4">
                                <Grid>
                                    <Border Opacity="0.25" HorizontalAlignment="Stretch" x:Name="glow" Width="Auto" CornerRadius="4,4,4,4">
                                        <Border.Background>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="1.702" ScaleY="2.243"/>
                                                        <SkewTransform AngleX="0" AngleY="0"/>
                                                        <RotateTransform Angle="0"/>
                                                        <TranslateTransform X="-0.368" Y="-0.152"/>
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="#B28DBDFF" Offset="0"/>
                                                <GradientStop Color="#008DBDFF" Offset="1"/>
                                            </RadialGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Border Opacity="0.25" HorizontalAlignment="Stretch" Margin="0,0,0,0" x:Name="shine" Width="Auto" CornerRadius="4,4,0,0">
                                        <Border.Background >
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Color="#99FFFFFF" Offset="0"/>
                                                <GradientStop Color="#33FFFFFF" Offset="1"/>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Viewbox Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5, 0, 5, 0" >
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto"/>
                                    </Viewbox>
                                </Grid>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="SlateGray" />
                                <Setter Property="Background" TargetName="shine" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Timeline1}"/>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="Timeline2_BeginStoryboard" Storyboard="{StaticResource Timeline2}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- MetalMemory radiobutton -->
        <Style  x:Key="MMRadioButton" TargetType="{x:Type RadioButton}">
            <Setter Property="Margin" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <BulletDecorator Background="Transparent" Cursor="Hand">
                            <BulletDecorator.Bullet>
                                <Grid Height="18" Width="18">
                                    <Polygon Name="TickMark" Points="4,9 8,15 15,3 8,11 4,9" Stroke="DarkGoldenrod" StrokeThickness="1" Visibility="Hidden" Fill="Goldenrod"/>
                                    <Border CornerRadius="3,0,0,3" BorderBrush="#FF565656" BorderThickness="2" />
                                </Grid>
                            </BulletDecorator.Bullet>
                            <Grid Margin="10, 0, 0, 0">
                                <Border Background="#FF565656" CornerRadius="3,3,3,3" Opacity="1"/>
                                    <Viewbox Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5, 0, 5, 0" >
                                    <TextBlock Margin="3,1,0,0" Foreground="Silver" FontFamily="Calibri">
                                            <ContentPresenter  HorizontalAlignment="Center" VerticalAlignment="Center" Width="Auto" Opacity="0.75"/>
                                    </TextBlock>
                                </Viewbox>
                            </Grid>
                           
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="TickMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Style setters voor de Highscore datagrid -->
        <Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Height" Value="50" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="Foreground" Value="Goldenrod" />
        </Style>

        <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="Foreground" Value="silver" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Foreground" Value="Silver" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{x:Null}" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
